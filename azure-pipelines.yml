stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: build
    displayName: 'Build job'
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.18.1'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
        cd ./dist/apps/celestial-nx4
        npm ci
      env:
        NPM_TOKEN: $(NPM_TOKEN)  
      displayName: 'Building the service'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/apps/celestial-nx4'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool: 
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:            
            - task: AzureWebApp@1
              displayName: 'Azure Web App Deploy'
              inputs:
                azureSubscription: 'dev-nikitam-eastus-rg'
                appType: webAppLinux
                appName: 'hugetest'
                runtimeStack: 'NODE|16-lts'
                package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
                startUpCommand: 'NODE_ENV=production node ./uniform.server.js'